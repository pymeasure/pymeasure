# References: https://packaging.python.org/en/latest/appveyor/#appveyor-yml

environment:

  matrix:

    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    # The list here is complete (excluding Python 2.6, which
    # isn't covered by this document) at the time of writing.

    # 64-bit
    - PYTHON_VERSION: "3.4"
      MINICONDA: C:\Miniconda3-x64
      #PYTHON: "C:\\Python34-x64"
      #DISTUTILS_USE_SDK: "1"
      #PYTHON_ARCH: "64"
      PLATFORM: x64  

    - PYTHON_VERSION: "3.5"
      MINICONDA: C:\Miniconda35-x64
      #PYTHON: "C:\\Python35-x64"
      #DISTUTILS_USE_SDK: "1"
      #PYTHON_ARCH: "64"
      PLATFORM: x64

    - PYTHON_VERSION: "3.6"
      MINICONDA: C:\Miniconda36-x64
      #PYTHON: "C:\\Python36-x64"
      #DISTUTILS_USE_SDK: "1"
      #PYTHON_ARCH: "64"
      PLATFORM: x64

    # 32-bit
    - PYTHON_VERSION: "3.4"
      MINICONDA: C:\Miniconda3
      #PYTHON: "C:\\Python34"
      PLATFORM: x86

    - PYTHON_VERSION: "3.5"
      MINICONDA: C:\Miniconda35
      #PYTHON: "C:\\Python35"
      PLATFORM: x86

    - PYTHON_VERSION: "3.6"
      MINICONDA: C:\Miniconda36
      #PYTHON: "C:\\Python36"
      PLATFORM: x86

matrix:
  fast_finish: true  # immediately finish build once one of the jobs fails.

skip_tags: true

init:
  - "ECHO %PYTHON_VERSION% %MINICONDA%"

install:

  # Set VC variables for the platform
  #- if %PLATFORM% == x64 call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\x86_amd64\vcvarsx86_amd64.bat"
  #- if %PLATFORM% == x86 call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\vcvars32.bat"

  # We need wheel installed to build wheels
  #- "%PYTHON%\\python.exe -m pip install --upgrade pip"
  #- "%PYTHON%\\python.exe -m pip install wheel"
  #- "%PYTHON%\\python.exe -m pip install setuptools"
  #- "%PYTHON%\\python.exe -m pip install -r requirements/core.txt"

  - "set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - "conda env create -f requirements/conda-%PYTHON_VERSION%.yml"
  - activate pymeasure

build: off

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python evrsion you want to use on PATH.
  - python setup.py test

after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  - python setup.py bdist_wheel

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.